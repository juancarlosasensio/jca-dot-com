---
title: Books Search
permalink: '/books-search/index.html'
layout: 'layouts/base.njk'
---

<!-- Search form for entering book title or author -->
<form id="search-form">
  <!-- Input for user to type the query -->
  <input type="text" id="search-input" placeholder="Enter book title or author" required>
  <!-- Button to submit the search query -->
  <button type="submit">Search</button>
</form>

<!-- Container for dynamically displaying search results -->
<ul id="results" class="results grid" role="list"></ul>

{% block scripts %}
  <script>
    const searchForm = document.getElementById('search-form');
    const searchInput = document.getElementById('search-input');
    const resultsList = document.getElementById('results');
    const loadMoreButton = document.getElementById('load-more');
    let currentPage = 0;
    let totalResults = 0;
    let currentQuery = '';

    function displaySearchResults(results, append = false) {
      if (!append) {
        resultsList.innerHTML = '';
      }
      resultsList.innerHTML += results?.map(book => `
        <li class="flow flow-space-xs">
          <img src="${book.coverImage.src}" alt="${book.coverImage.alt}">
          <h4>${book.title}</h4>
          <p>${book.author}</p>
          <p>${book.year}</p>
        </li>
      `).join('');
    }

    function renderLoadMoreButton() {
      const buttonExists = document.getElementById('load-more');
      if (buttonExists) {
        return;
      }

      const loadMoreButton = document.createElement('button');
      loadMoreButton.id = 'load-more';
      loadMoreButton.textContent = 'Load more books';

      loadMoreButton.addEventListener('click', () => {
        currentPage++;
        fetchBooks(currentQuery, currentPage, true);
        updateLoadMoreButton();
      });

      resultsList.after(loadMoreButton)
    }

    function updateLoadMoreButton() {
      if ((currentPage + 1) * 10 >= totalResults) {
        loadMoreButton.remove();
      }
    }

    async function fetchBooks(query, page = 0, append = false) {
      const offset = page * 10;
      const apiUrl = `/search-books/${query}/${offset}`;
      try {
        const response = await fetch(apiUrl);
        if (!response.ok) {
          throw new Error(`An error occurred: ${response.statusText}`);
        }
        const data = await response.json();
        totalResults = data.numFound;
        displaySearchResults(data.results, append);
        renderLoadMoreButton();
      } catch (error) {
        console.error('Error fetching data:', error);
        const li = document.createElement('li');
        li.textContent = 'There was an error fetching the data. Please try again later.';
        resultsList.appendChild(li);
      }
    }

    searchForm.addEventListener('submit', (event) => {
      event.preventDefault();
      const query = searchInput.value.trim();
      if (!query) {
        alert("Please enter a search term");
        return;
      }
      currentQuery = query;
      currentPage = 0;
      fetchBooks(query, currentPage);
    });
  </script>
{% endblock %}
