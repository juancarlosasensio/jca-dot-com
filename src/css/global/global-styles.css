/* 
  Global styles 

  Low-specificity, global styles that apply to the whole 
  project: https://cube.fyi/css.html
*/


body {
  background: var(--color-light);
  color: var(--color-dark);
  font-size: var(--size-step-1);
  font-family: var(--font-base);
  line-height: var(--leading-standard);
  font-size-adjust: from-font;
  margin: 0;
}


:is(h1, h2, h3, h4) {
  line-height: var(--leading-fine);
  font-family: var(--font-special);
  font-weight: 700;
  hyphens: auto;
  text-wrap: balance;
}

h1 {
  font-size: var(--size-step-6);
  max-width: 20ch;
}

h2 {
  font-size: var(--size-step-5);
  max-width: 35ch;
}

h3 {
  font-size: var(--size-step-4);
  max-width: 35ch;
}

:is(h4, h5, h6) {
  font-size: var(--size-step-3);
}


small {
  font-size: var(--size-step-0);
}

ins {
  text-decoration: none;
  background: var(--color-primary);
  color: var(--color-dark);
  padding-inline: 0.3em;
}

:is(code, kbd, samp) {
  font-family: var(--font-mono);
  padding: 0.2em 0.2em 0.05em 0.2em;
  hyphens: none;
  tab-size: 2;
  text-align: left;
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;
  box-decoration-break: clone;
}

/* This is quite a new property, so we want code styles to at least, not be huge or tiny */
@supports not (font-size-adjust: from-font) {
  :is(code, kbd, samp) {
    font-size: 0.8em;
  }
}

pre:has(code) {
  width: max-content;
  max-width: 100%;
  overflow-x: auto;
}

pre code {
  border: none;
  background: none;
  padding: 0;
}


kbd {
  border: 1px solid;
  padding-block-end: 0.1em;
}

var {
  font-style: normal;
  font-weight: var(--font-medium);
}

q {
  font-style: italic;
}


ul:not([class]) {
  padding-inline-start: 1.7ch;
  list-style-type: disc;
}

ul:not([class]) > li {
  padding-inline-start: var(--space-xs);
}

:is(ol, ul):not([class]) li + * {
  margin-block-start: var(--flow-space, var(--space-xs));
}

ul ::marker {
  font-size: 0.8lh;
}

ol ::marker {
  font-size: 1em;
  font-weight: var(--font-bold);
}


/* Lists with classes and roles will be out of standard flow, so remove the default spacing */
[role='list'][class],
[role='tablist'][class] {
  margin-block: 0;
  padding: 0;
}


dt {
  font-weight: var(--font-medium);
}

dt + dd {
  margin-block-start: var(--space-xs);
}

dd + dt {
  margin-block-start: var(--space-s);
}

dd {
  margin-inline-start: 1.5ch;
}


blockquote {
  margin-inline: 0;
  color: var(--color-dark);
}

blockquote footer {
  margin-block-start: var(--space-s);
  color: var(--color-dark);
  font-size: var(--size-step-0);
}

blockquote q {
  font-style: normal;
}

:is(video, iframe[src*='youtube'], iframe[src*='vimeo']) {
  display: block;
  width: 100%;
  height: auto;
  aspect-ratio: 16/9;
}

img {
  height: auto;
  max-width: 100%;
  display: block;
}

figcaption {
  padding-block-start: 0.5em;
  font-size: var(--size-step-0);
  font-family: monospace;
}


table {
  border: var(--stroke);
  border-collapse: collapse;
  width: 100%;
}

th {
  text-align: left;
  font-weight: var(--font-bold);
  line-height: var(--leading-fine);
}

thead th {
  padding-block: var(--space-s);
}

td,
th {
  padding: var(--space-xs) var(--space-s);
}

th:not(:only-of-type) {
  border-block-end: var(--stroke);
}

th:only-of-type {
  border-inline-end: var(--stroke);
}

:is(th, td) ~ :is(th, td) {
  border-inline-start: var(--stroke);
}

tr + tr :is(th, td) {
  border-block-start: var(--stroke);
}

caption {
  caption-side: bottom;
  margin-block-start: var(--space-s);
}


a:not([class]):hover {
  text-underline-offset: 0.2lh;
}

:is(h1, h2, h3, h4) a:not([class]) {
  text-decoration-thickness: 0.1ex;
  text-underline-offset: 0.2ex;
}

:is(h1, h2, h3, h4) a:not([class]):hover {
  text-underline-offset: 0.3ex;
}


:focus {
  outline: none;
}

:focus-visible {
  outline: 2px solid var(--focus-color, currentColor);
  outline-offset: var(--focus-offset, 0.2lh);
}


/* Firefox is the only browser that doesn't outline the whole element 
unless you make it display: inline-block. 
That in itself causes multiple flow issues so we can detect it, using its own vendor prefix and reduce focus offset */
@supports (-moz-appearance: none) {
  :root {
    --focus-offset: 0.08em;
  }
}


:target {
  scroll-margin-block: 5lh;
}


::selection {
  color: var(--color-dark);
  background: var(--color-light);
}


hr {
  border: none;
  border-block-start: var(--stroke);
  margin-block: var(--flow-space, var(--space-xl));
}


svg:not([class]) {
  width: auto;
  height: 1lh;
}

svg {
  flex-shrink: 0;
}

svg[role='img'][width][height] {
  width: revert;
  height: revert;
  background: var(--color-light);
  padding: var(--space-xs);
}


/* There's a .flow composition, but this prevents forms from having to have that applied where markup is harder to control in certain systems. It still uses the --flow-space variables though to make managing space easier */
form > * + * {
  margin-top: var(--flow-space, 1rem);
}


:is(input, select, textarea) {
  accent-color: var(--color-primary);
}


:is(input:not([type='checkbox'], [type='radio'], [type='color']), select, textarea) {
  padding: 0.5em 0.8em;
  border-radius: var(--radius-s);
  border: var(--stroke-solid);
  background: var(--color-dark-glare);
  color: var(--color-light);
  width: 100%;

  &::placeholder {
    color: var(--color-mid);
    opacity: 1;
  }
}


label {
  line-height: var(--leading-fine);
  font-weight: var(--font-medium);
}

label::after {
  content: '\A';
  white-space: pre;
}


/* Usually label wraps checkbox and radio buttons, so we give ourselves more layout and text-flow control with flex */
label:has(input) {
  display: flex;
  align-items: baseline;
  gap: var(--space-s);
  font-weight: var(--font-normal);
}

label:has(input) + label:has(input) {
  --flow-spce: var(--space-s-m);
}

Slightly adjusts the vertical position of the check/radio
label:has(input) input {
  transform: translateY(-0.1ex);
}


input:disabled {
  background: var(--color-mid);
}

input:disabled,
label input:disabled + * {
  cursor: not-allowed;
}


fieldset {
  border: var(--stroke);
  padding: var(--space-s);
}

legend {
  font-weight: var(--font-medium);
  padding-inline: var(--space-xs);
}


summary {
  font-weight: var(--font-bold);
  cursor: pointer;
}

details[open] summary {
  margin-block-end: var(--space-s);
}


/*
  Begin Styles that work for current page
  Will want to delete or improve these...
*/

/* :root {
    --font-plain: Helvetica Neue,Helvetica,Arial,sans-serif;
    --font-serif: Georgia,serif;
    --font-special: Barlow Condensed,Helvetica,sans-serif;
    --font-mono: Menlo,Courier,Courier New,Andale Mono,monospace;
    --color-dark: #050505;
    --color-darkish: #404040;
    --color-lightish: #e6e6e6;
    --color-light: #fafafa;
    --color-mid: grey;
    --ratio: 1.4;
    --s-5: clamp(0.33rem,0.39rem + -0.29vw,0.18rem);
    --s-4: clamp(0.41rem,0.47rem + -0.31vw,0.25rem);
    --s-3: clamp(0.51rem,0.57rem + -0.31vw,0.35rem);
    --s-2: clamp(0.64rem,0.69rem + -0.27vw,0.5rem);
    --s-1: clamp(0.8rem,0.84rem + -0.18vw,0.71rem);
    --s0: clamp(1rem,1rem + 0vw,1rem);
    --s1: clamp(1.25rem,1.19rem + 0.32vw,1.41rem);
    --s2: clamp(1.56rem,1.39rem + 0.85vw,2rem);
    --s3: clamp(1.95rem,1.61rem + 1.7vw,2.83rem);
    --s4: clamp(2.44rem,1.83rem + 3.04vw,4rem);
    --s5: clamp(3.05rem,2.04rem + 5.07vw,5.65rem);
    --measure: 65ch;
    --line-height: var(--ratio);
    --line-height-small: calc(0.8*var(--ratio));
    --border-thin: var(--s-5);
    --border-thick: var(--s-2);
    line-height: var(--ratio);
    font-size: calc(.333vw + 1em);
    font-family: var(--font-plain);
    background-color: var(--color-light);
    color: var(--color-dark)
}

*,:after,:before {
    box-sizing: border-box;
    background-color: inherit;
    font-family: inherit;
    color: inherit;
    overflow-wrap: break-word;
    margin: 0;
    padding: 0;
    border: 0 solid
}

[hidden] {
    display: none
}

[hidden]+* {
    margin-top: 0!important
}

footer,header,main,nav {
    display: block
}

@media (prefers-reduced-motion:no-preference) {
    html:focus-within {
        scroll-behavior: smooth
    }
}

:focus {
    outline: var(--border-thin) solid var(--color-mid);
    outline-offset: var(--border-thin)
}

[tabindex="-1"]:focus,shrink-grow:focus {
    outline: none
}

.cta,button {
    font-size: inherit;
    font-weight: 700;
    display: inline-block;
    cursor: pointer;
    line-height: 1.1;
    font-family: var(--font-special);
    color: var(--color-light);
    background-color: var(--color-dark);
    padding: .5em 1.5em .7em;
    border-width: var(--border-thin)
}

button {
    border-color: var(--color-dark)
}

.cta {
    background-color: transparent;
    color: var(--color-dark)
}

.cta--big {
    display: block;
    font-size: var(--s2);
    text-align: center;
    text-decoration: none
}

.cta--big span {
    text-decoration: underline
}

[href="#main"] {
    display: inline-block;
    padding: var(--s-1);
    color: var(--color-light);
    background-color: var(--color-dark);
    position: absolute;
    top: -10rem
}

[href="#main"]:focus {
    position: absolute;
    z-index: 1;
    top: 0;
    outline: none
}

.docs-block-link {
    display: block
}

img {
    max-inline-size: 100%;
}

.inverted {
  filter: invert(100%);
}

img.rotate-minus-90 {
    -webkit-transform: rotate(-90deg);
    -moz-transform: rotate(-90deg);
    -o-transform: rotate(-90deg);
    -ms-transform: rotate(-90deg);
    transform: rotate(-90deg);
}

[role=figure],figure {
    text-align: center
}

[role=figure] img,figure img {
    background-image: linear-gradient(var(--color-light),var(--color-light))
}

.figcaption,figcaption {
    margin-top: var(--s-1);
    font-size: var(--s-1)
}

.docs-icon {
    width: .75em;
    height: .75em;
    stroke: currentColor;
    stroke-width: 4;
    fill: none;
    text-decoration-skip: objects
}

[aria-current=true] noscript {
    padding: var(--s-1);
    background-color: var(--color-lightish)
}

kbd {
    line-height: 1;
    font-size: var(--s-1);
    color: var(--color-light);
    background-color: var(--color-dark);
    padding: .125em .5em;
    border-radius: .125em
}

table {
    width: 100%;
    border-collapse: collapse
}

table code {
    white-space: nowrap
}

td,th {
    border-width: var(--border-thin);
    padding: var(--s-1);
    text-align: left
}

td:first-child,th {
    font-weight: 700
}

.docs-props-table {
    overflow-x: auto
}

.docs-props-table td:last-child {
    font-size: var(--s-1)
}

main {
    line-height: 1.5
}

h1,h2,h3,h4 {
    line-height: var(--line-height-small);
    font-family: var(--font-special);
    font-weight: 700;
    hyphens: auto
}

.h1,h1 {
    font-size: var(--s4)
}

.h2,h2 {
    font-size: var(--s3)
}

.h3,h3 {
    font-size: var(--s2)
}

.h4,h4 {
    font-size: var(--s1)
}

aside>ol,aside>ul,main>ol,main>ul {
    padding-left: 2em
}

main>*+* {
    margin-top: var(--s3)
}

[class^=docs-note] p+p,main p+p {
    margin-top: var(--s-1)
}

hr {
    padding: var(--border-thin) 0 0;
    border-left-width: 0;
    border-bottom-width: var(--border-thin);
    border-right-width: 0;
    border-top-width: var(--border-thin)
}

button,pre {
    outline: var(--border-thin) solid transparent;
    outline-offset: calc(var(--border-thin)*-1)
}

.docs-quote>span {
    font-size: 2.5rem;
    font-family: var(--font-special);
    font-weight: 700;
    background-color: var(--color-dark);
    color: var(--color-light);
    box-decoration-break: clone;
    -webkit-box-decoration-break: clone;
    padding: .5rem 1ch;
    line-height: var(--line-height)
}

.docs-logo svg {
    width: 100%
}

.docs-nav-toggle {
    font-size: var(--s1);
    margin-top: var(--s1);
    font-weight: 700;
    width: 100%;
    text-align: center;
    display: none
}

.docs-nav-toggle path {
    transition: d .25s
}

.docs-nav-toggle[aria-expanded=true] path {
    d: path("M3,3 29,29 M16,16 16,16 M3,29 29,3")
}

@media (max-width: 827px) {
    .with-js .docs-nav-toggle {
        display:block
    }

    .with-js .docs-nav {
        display: none
    }

    [aria-expanded=true]+.docs-nav {
        display: block
    }
}

.docs-nav {
    margin-top: var(--s0)
}

.docs-nav ul {
    list-style: none
}

.docs-nav li+li {
    margin-top: var(--s-2)
}

.docs-nav h2 {
    font-size: var(--s2);
    line-height: var(--line-height)
}

.docs-nav *+h2 {
    margin-top: var(--s2)
}

.docs-nav *+* {
    margin-top: var(--s-3)
}

.docs-index-link {
    display: block;
    font-size: var(--s-1)
}

.docs-index-link .docs-icon {
    width: 1.25em;
    height: 1.25em;
    vertical-align: -.25em
}

.docs-nav a {
    display: inline-block;
    line-height: var(--line-height-small);
    font-weight: 700;
    text-decoration: none
}

.docs-nav a:not([aria-current=true]):hover {
    text-decoration: underline
}

.docs-nav [aria-current=true] {
    position: relative;
    text-indent: -1em
}

.docs-feed-link {
    font-size: var(--s1);
    font-family: var(--font-special);
    margin-top: var(--s-1)
}

.docs-nav .editions-link {
    margin-top: var(--s2);
    color: var(--color-light);
    background-color: var(--color-dark);
    display: block;
    text-transform: uppercase;
    font-size: .666em;
    padding: var(--s-3);
    clip-path: polygon(0 0,calc(100% - .75em) 0,100% 100%,.75em 100%);
    text-align: center
}

.docs-toc {
    position: relative;
    border-width: var(--s-3);
    font-weight: 700
}

.docs-toc>[aria-hidden] {
    position: absolute;
    right: 1rem;
    top: -.75em;
    text-transform: uppercase;
    font-family: var(--font-special);
    padding: 0 .5rem;
    font-size: var(--s1);
    line-height: var(--line-height-small)
}

.docs-toc ul {
    padding: var(--s1) var(--s3);
    margin: 0
}

.docs-toc li {
    line-height: var(--line-height-small)
}

.docs-toc li+li {
    margin-top: var(--s-2)
}

.docs-toc a {
    text-decoration: none
}

.docs-section-header {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start
}

.docs-section-header a {
    font-size: 2.25rem
}

.docs-section-header>:first-child {
    margin-right: var(--s-2)
}

.docs-page {
    display: flex;
    flex-wrap: wrap
}

.docs-header,.docs-main {
    padding: var(--s2)
}

.docs-header {
    flex-basis: 15rem;
    flex-grow: 1;
    position: relative;
    outline: var(--border-thin) dashed;
    padding-top: var(--s3)
}

.docs-main {
    flex-basis: 0;
    flex-grow: 999;
    min-width: 66%;
    display: flex;
    flex-direction: column;
    padding-bottom: 0
}

.docs-main>:last-child {
    margin-top: 0
}

footer,main>* {
    display: block;
    margin-left: auto;
    margin-right: auto;
    max-width: 40rem
}

main>style,script {
    display: none
}

footer:before {
    content: "\220e";
    display: block;
    padding-bottom: var(--s-1)
}

[class^=docs-note] {
    border-left-width: var(--s0);
    padding-left: var(--s0)
}

[class^=docs-note]>*+* {
    margin-top: var(--s3)
}

.docs-note--warning {
    border-image: repeating-linear-gradient(-25deg,transparent,transparent .333rem,var(--color-dark) 0,var(--color-dark) .666rem) 25
}

.docs-launcher {
    text-align: center;
    margin-top: 0
}

.docs-launcher:before {
    content: "";
    width: 0;
    display: block;
    margin-left: auto;
    margin-right: auto;
    border-left-width: var(--border-thin);
    height: var(--s2)
}

.docs-demo-page {
    padding: var(--s1);
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center
}

.docs-demo-page>h1 {
    text-align: center;
    font-size: var(--s3)
}

.docs-demo-page>h1+* {
    margin-top: var(--s2)
}

.docs-demo-inline {
    max-width: none
}

label {
    font-weight: 700;
    font-family: var(--font-mono)
}

label,label small {
    display: block
}

label small {
    font-weight: 400;
    font-style: italic
}

.container {
    background-color: var(--color-light);
    box-sizing: border-box;
    margin-inline: auto;
    animation: 5s linear infinite alternate squeeze;
    height: auto;
    overflow-y: auto;
    filter: invert(100%);
    padding: var(--s2);
}

.card-container,[type=checkbox]~svg,input,textarea {
    box-shadow: inset .25rem .25rem 0 #ddd
}

.card-container,[type=email],[type=text],textarea {
    width: 100%;
    font-size: inherit;
    font-family: var(--font-mono);
    border-width: var(--border-thin);
    border-radius: 0;
    padding: var(--s-1)
}

[type=checkbox]~svg {
    stroke: transparent;
    border-width: var(--border-thin);
    vertical-align: middle;
    padding: 2px;
    box-sizing: content-box
}

[type=checkbox]:checked~svg {
    stroke: currentColor
}

[type=checkbox]:focus~svg {
    outline: var(--border-thin) solid var(--color-mid)
}

input:focus,textarea:focus {
    outline-offset: 0
}

.docs-field label+* {
    margin-top: var(--s-3)
}

.docs-field+.docs-field {
    margin-top: var(--s2)
}

.docs-generator {
    display: flex;
    flex-wrap: wrap;
    border-width: var(--border-thin)
}

.docs-generator[hidden] {
    display: none
}

.docs-generator>* {
    flex: 1 0 auto;
    flex-basis: 15rem
}

.docs-generator form {
    padding: var(--s1)
}

.docs-generator output {
    background-color: var(--color-dark);
    overflow-x: auto
}

.docs-generator pre {
    overflow: hidden
}

.docs-hl {
    background-color: var(--color-darkish);
    padding: var(--s-5) var(--s-4)
}

.docs-generator__switcher {
    font-family: var(--font-mono);
    color: var(--color-light);
    display: flex;
    text-align: center
}

.docs-generator__switcher>* {
    flex-basis: 50%
}

.docs-generator__switcher label>span {
    padding: var(--s-3);
    display: block;
    background-color: var(--color-light);
    color: var(--color-dark)
}

.docs-generator__switcher input:checked+span {
    filter: invert(100%)
}

.docs-generator__switcher input:focus+span {
    outline: var(--border-thin) solid var(--color-mid);
    outline-offset: calc(var(--border-thin)*-1)
}

@keyframes pinch {
    0% {
        transform: translateY(.5rem)
    }

    25% {
        transform: translateY(-.5rem)
    }

    50% {
        transform: translateY(.25rem)
    }

    75% {
        transform: translateY(-.25rem)
    }

    87.5% {
        transform: rotate(.125rem)
    }

    to {
        transform: rotate(0)
    }
}

.docs-output--regenerated code {
    animation: pinch .25s ease-in
}

h1+.docs-blog-meta {
    font-weight: 700;
    margin-top: var(--s-3)
}

.docs-blog-meta>span {
    white-space: nowrap;
    margin-right: var(--s-3)
}

.docs-features {
    list-style: none;
    padding: 0;
    text-align: center
}

.docs-features img {
    height: 7.5rem;
    width: auto;
    max-width: 100%
}

.docs-picture-index [role=listitem] {
    position: relative
}

.docs-picture-index a {
    text-decoration: none
}

.docs-picture-index a h2 {
    text-decoration: underline
}

.docs-picture-index img {
    max-width: 12rem
}

.docs-read-now {
    text-transform: uppercase;
    box-shadow: 0 0 0 var(--border-thin) var(--color-light);
    top: 0;
    right: 0;
    transform: rotate(20deg);
    background-color: var(--color-dark);
    padding: var(--s-5) var(--s-2);
    line-height: var(--line-height-small)
}

.docs-read-now,.loader {
    font-weight: 700;
    font-family: var(--font-mono);
    position: absolute;
    color: var(--color-light)
}

.loader {
    text-align: center;
    width: 100%;
    height: 100%;
    padding: var(--s5) var(--s0);
    background: rgb(0 0 0/85%);
    backdrop-filter: blur(3px);
    z-index: 1
}

.checkout-form {
    width: 100%;
    max-width: 35rem;
    margin-inline:auto;text-align: left
}

.checkout-form,.checkout-panel {
    position: relative;
    padding-inline:var(--s2)}

.checkout-panel {
    background: var(--color-dark);
    color: var(--color-light);
    text-align: center;
    z-index: 11
}

.checkout-panel input {
    box-shadow: none
}

.checkout-panel del {
    background: none;
    text-decoration-color: var(--color-mid);
    text-decoration-thickness: .3ex
}

.checkout-panel button {
    filter: invert(1);
    margin-block-start:var(--s2)}

.checkout-panel h2:first-of-type {
    font-size:var(--s5);
    max-width: 15ch;
    margin-inline:auto;
  }

.checkout-panel h2+p {
    font-size: var(--s2);
    font-family: var(--font-serif);
    max-width: 35ch;
    margin-inline:auto}

.checkout-panel__features {
    padding-block:var(--s2)}

.checkout-panel grid-l {
    max-width: 40rem;
    margin-inline:auto}

.checkout-panel grid-l svg {
    height: 12rem;
    width: auto;
    margin-inline:auto}

.lost-access-panel {
    max-width: 70rem;
    margin-inline:auto;padding-inline:var(--s2)}

.help-form {
    max-width: 30rem
}

.region {
    padding-block:var(--s4)}

.banner {
    display: block;
    padding: var(--s-1) var(--s2) var(--s0) var(--s2);
    background: var(--color-dark);
    color: var(--color-light);
    font-family: var(--font-mono);
    z-index: 10
}

.banner strong {
    font-size: 1.2em
}

@media (min-width: 65em) {
    .banner {
        position:sticky;
        top: 0
    }
}

@media print {
    .banner {
        display: none
    }
}

plasmo-csui {
    display: none
}

code {
    font-family: var(--font-mono);
    font-size: .85em
}

pre code {
    background-color: var(--color-dark);
    display: block;
    padding: var(--s1)
}

pre[class*=language-],pre code {
    color: var(--color-light);
    overflow-x: auto
}

pre[class*=language-] {
    text-align: left;
    white-space: pre;
    word-spacing: normal;
    word-break: normal;
    word-wrap: normal;
    line-height: 1.4;
    -moz-tab-size: 2;
    -o-tab-size: 2;
    tab-size: 2;
    -webkit-hyphens: none;
    -moz-hyphens: none;
    -ms-hyphens: none;
    hyphens: none
}

.token.cdata,.token.comment,.token.doctype,.token.prolog {
    color: #cecece
}

.token.punctuation {
    color: #fefefe
}

.token.constant,.token.deleted,.token.property,.token.symbol,.token.tag {
    color: #b1b1b1
}

.token.attr-name,.token.builtin,.token.char,.token.inserted,.token.selector,.token.string {
    color: #cbcbcb
}

.language-css .token.string,.style .token.string,.token.entity,.token.operator,.token.url,.token.variable {
    color: #b8b8b8
}

.token.atrule,.token.attr-value,.token.function {
    color: #d2d2d2
}

.token.keyword {
    color: #b8b8b8
}

.token.color,.token.important,.token.regex {
    color: #d2d2d2
}

.token.bold,.token.important {
    font-weight: 700
}

.token.italic {
    font-style: italic
}

.token.entity {
    cursor: help
}

image-l {
    display: block
}

image-l:after {
    content: "";
    display: block;
    border: var(--border-thin) solid var(--color-dark);
    background-image: paint(image-cross)
}

text-l {
    display: block
}

text-l span {
    display: inline-block;
    color: transparent;
    position: relative;
    pointer-events: none
}

text-l span:before {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    top: calc(50% - var(--border-thin)/2);
    bottom: calc(50% - var(--border-thin)/2);
    background-color: var(--color-dark)
}

words-l {
    font-family: var(--font-plain)
}

shrink-grow {
    display: block;
    margin-inline:0;
    max-width: none;
    overflow: hidden;
    border-width: var(--border-thin);
    padding: var(--s1)
}

shrink-grow .test {
    display: inline-block
}

switcher-l {
    display: flex;
    flex-wrap: wrap
}

switcher-l>* {
    flex-basis: calc((var(--measure) - 100%)*999);
    flex-grow: 1
}

center-l {
    display: block;
    box-sizing: content-box;
    margin-inline:auto;max-inline-size: var(--measure)
}

cover-l {
    min-block-size: 100vh;
    padding: var(--s1)
}

cover-l,stack-l {
    display: flex;
    flex-direction: column
}

stack-l {
    justify-content: flex-start
}

stack-l > * + * {
    margin-block-start:var(--s1)
}

.stack.book > :nth-child(2) {
  margin-block-end: auto;
}

.stack:only-child {
  block-size: 100%;
}

.stack {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
} 

.stack > * + * {
  margin-block-start: var(--space, 1.5rem);
}

box-l {
    display: block;
    padding: var(--s1);
    border-width: var(--border-thin);
    outline: var(--border-thin) solid transparent;
    outline-offset: calc(var(--border-thin)*-1)
}

.box {
  padding: var(--s1);
  border: var(--border-thin) solid;
  --color-light: #fff;
  --color-dark: #000;
  color: var(--color-dark);
  background-color: var(--color-light);
}

.box.book {
  padding: 0;
  border: none;
  max-width: 350px;
}

.box * {
  color: inherit;
}

.box.invert {
  color: var(--color-light);
  background-color: var(--color-dark);
}

.box.footer {
  border: 0;
  --color-light: var(--color-light);
}

grid-l {
    display: grid;
    grid-gap: var(--s1);
    align-content: start;
    grid-template-columns: 100%
}

.grid {
  display: grid;
  grid-gap: 1rem;
}

@supports (width: min(250px, 100%)) {
  .grid {
    grid-template-columns: repeat(auto-fit, minmax(min(250px, 100%), 1fr));
  }
}

sidebar-l {
    display: flex;
    flex-wrap: wrap
}

sidebar-l>* {
    flex-grow: 1
}

.with-sidebar {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: var(--s1);
}

.with-sidebar > :first-child {
  flex-grow: 1;
}

.with-sidebar > :last-child {
  flex-basis: 0;
  flex-grow: 999;
  min-inline-size: 50%;
}

cluster-l {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    align-items: flex-start
}

frame-l {
    aspect-ratio: 16/9;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center
}

.frame {
  --n: 4;
  --d: 5;
  aspect-ratio: var(--n) / var(--d);
  overflow: hidden;
  display: flex;
  justify-content: start;
  align-items: start;
}

.frame > img,
.frame > video {
  inline-size: 100%;
  block-size: 100%;
  object-fit: cover;
}

.frame.book > img,
.frame.book > video {
  inline-size: auto;
}

reel-l {
    display: flex;
    overflow-x: auto;
    overflow-y: hidden;
    scrollbar-color: var(--color-light) var(--color-dark)
}

reel-l>* {
    flex: 0 0 var(--item-width)
}

reel-l>img {
    block-size: 100%;
    flex-basis: auto;
    inline-size: auto
}

reel-l::-webkit-scrollbar {
    block-size: 1rem
}

reel-l::-webkit-scrollbar-thumb,reel-l::-webkit-scrollbar-track {
    background-color: var(--color-dark)
}

reel-l::-webkit-scrollbar-thumb {
    background-image: linear-gradient(var(--color-dark),var(--color-dark) .25rem,var(--color-light) 0,var(--color-light) .75rem,var(--color-dark) 0)
}

imposter-l {
    position: absolute;
    inset-block-start: 50%;
    inset-inline-start: 50%;
    transform: translate(-50%,-50%)
}

icon-l svg {
    height: .75em;
    height: 1cap;
    width: .75em;
    width: 1cap
}

.vh {
    clip-path: inset(100%)!important;
    clip: rect(1px,1px,1px,1px)!important;
    height: 1px!important;
    overflow: hidden!important;
    position: absolute!important;
    white-space: nowrap!important;
    width: 1px!important
}

.display\:block {
    display: block!important
}

.filter\:invert {
    filter: invert(100%)!important
}

.text-align\:center, .has-text-align-center {
    text-align: center!important
}

.text-align\:left {
    text-align: left!important
}

.font-size\:body {
    font-size: 1rem!important
}

.font-size\:small {
    font-size: .75rem!important
}

.font-size\:1 {
    font-size: var(--s1)!important
}

.max-width\:quarter {
    max-width: calc(var(--measure)/4)!important
}

.max-width\:100\% {
  max-width: 100%;
}

.height\:100\% {
    height: 100%
}

.measure\:short {
    max-width: 40ch
} */